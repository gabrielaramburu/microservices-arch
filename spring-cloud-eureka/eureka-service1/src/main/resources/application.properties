#https://developpaper.com/this-article-gives-you-the-reason-why-eureka-service-discovery-is-slow-and-deeply-analyzes-the-principle-of-eureka-client-service-discovery-and-eureka-server-service-elimination/

#logging.level.org.springframework.=DEBUG
spring.application.name=microservice1

#Spring determines randomly the port number
server.port=0

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.client.healthcheck.enabled=true


#When the lease expires, the default service expiration time is 90 seconds. 
#If the service does not heartbeat after 90 seconds, eurekaserver will remove the service from the list
#It's changed to 6 seconds
eureka.instance.lease-expiration-duration-in-seconds= 2

#The lease renewal interval is 30 seconds by default, which is changed to 3 seconds here
eureka.instance.lease-renewal-interval-in-seconds=3

#actuator configuration
management.endpoint.health.show-details=always

#enable spring actuator http access
management.endpoints.web.exposure.include=*

#system admin client
spring.boot.admin.client.url=http://localhost:8093  
management.info.env.enabled=true 

